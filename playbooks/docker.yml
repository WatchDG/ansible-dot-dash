---
# Playbook для установки Docker
# Устанавливает Docker на хосты группы docker

- name: "Установка Docker"
  hosts: docker
  become: true
  gather_facts: true
  vars_files:
    - "../group_vars/all.yml"
    - "../host_vars/{{ inventory_hostname }}.yml"

  tasks:
    - name: "Обновление кэша пакетов"
      apt:
        update_cache: yes
        cache_valid_time: 3600
      when: ansible_os_family == "Debian"

    - name: "Установка зависимостей"
      apt:
        name:
          - ca-certificates
          - curl
        state: present
      when: ansible_os_family == "Debian"

    - name: "Создание директории для ключей APT"
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'
      when: ansible_os_family == "Debian"

    - name: "Загрузка GPG ключа Docker"
      get_url:
        url: https://download.docker.com/linux/debian/gpg
        dest: /etc/apt/keyrings/docker.asc
        mode: '0644'
      when: ansible_os_family == "Debian"

    - name: "Добавление репозитория Docker"
      apt_repository:
        repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian trixie stable"
        state: present
        update_cache: true
        filename: docker
      when: ansible_os_family == "Debian"

    - name: "Установка Docker CE"
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present
      when: ansible_os_family == "Debian"

    - name: "Запуск и включение службы Docker"
      systemd:
        name: docker
        state: started
        enabled: yes

    - name: "Добавление пользователя в группу docker"
      user:
        name: "{{ ansible_user }}"
        groups: docker
        append: yes
      when: ansible_user is defined

    - name: "Проверка версии Docker"
      command: docker --version
      register: docker_version
      changed_when: false

    - name: "Вывод версии Docker"
      debug:
        var: docker_version.stdout
